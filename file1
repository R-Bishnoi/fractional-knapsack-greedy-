#include<bits/stdc++.h>
using namespace std;


double frac_knapsack(int p[],int wt[],int w,int n){
 vector<pair<double,int>>v(n+1);
 
 double total_profit=0;
 int fill_level=0;
 
 for(int i=0;i<n;i++){
     double x=(p[i]*1.0)/wt[i];
     v.push_back({x,i});
}
 
 sort(v.begin(),v.end(),greater<pair<double,int>>());
 
for(int i=0;i<n;i++){
    //object can put competely
    if(w>=wt[v[i].second]+fill_level){
     total_profit+=p[v[i].second];
     fill_level+=wt[v[i].second];
     }
    //fraction of object can put in knapsack 
     else{
     total_profit+=(w-fill_level)*v[i].first;
     break;
     }
 }
    return total_profit;
}


int main(){
  
  int p[]={ 1,2,5,6 };
  int wt[]={ 2,3,4,5 };
  
    int n=sizeof(p)/sizeof(p[0]);
    int w=8;
 
cout<<"Total profit using fractional knapsack method = "<<frac_knapsack(p,wt,w,n)<<endl;
    
    return 0;
}
